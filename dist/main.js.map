{"version":3,"file":"main.js","mappings":"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","sources":["webpack://battleship/./src/app.js","webpack://battleship/./src/index.js"],"sourcesContent":["const yTranslate = {0:'A',1:'B',2:'C',3:'D',4:'E',5:'F',6:'G',7:'H',8:'I',9:'J'};\n\nfunction getRandom(min,max){\n    return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction createShip(length){\n    return {\n        length,\n        hits: 0,\n        hit(){\n            this.hits += 1;\n        },\n        getLength(){\n            return this.length\n        },\n        getHits(){\n            return this.hits\n        },\n        isSunk(){\n            return this.length === this.hits ? true : false;\n        }\n    }\n}\n\nfunction createGameboard(){\n    return {\n        grid:[new Array(10),new Array(10),new Array(10),new Array(10),\n            new Array(10),new Array(10),new Array(10),new Array(10),\n            new Array(10),new Array(10)],\n        ships: [],\n        placeShip(shipLength, start, end) {\n            // Check if viable placement for ship of designated size\n            if((start[0] === end[0] || start[1] === end[1]) && (Math.abs(start[0] - end[0]) + 1 === shipLength || Math.abs(start[1] - end[1]) + 1 === shipLength)){\n                const newShip = createShip(shipLength);\n                \n                let cells = [];\n                // Check if placement is horizontal\n                if(start[1] === end[1]){\n                    let xStart = start[0];\n                    let xEnd = end[0];\n                    if(xStart > xEnd){\n                        [xStart, xEnd] = [xEnd, xStart]\n                    }\n                    for(let i = xStart; i <= xEnd; i++){\n                        this.grid[i][start[1]] = newShip;\n                        cells.push([i,start[1]]);\n                    }\n                // Else placement must be vertical\n                }else {\n                    let yStart = start[1];\n                    let yEnd = end[1];\n                    if(yStart > yEnd){\n                        [yStart, yEnd] = [yEnd, yStart]\n                    }\n                    for(let i = yStart; i <= yEnd; i++){\n                        this.grid[start[0]][i] = newShip;\n                        cells.push([start[0],i]);\n                    }\n                }\n                this.ships.push({ship: newShip, cells});\n            }\n        },\n        getInfo(coords){\n            return this.grid[coords[0]][coords[1]];\n        },\n        recieveAttack(coords){\n            if(this.grid[coords[0]][coords[1]] === undefined){\n                this.grid[coords[0]][coords[1]] = 'miss';\n                return 'Miss!'\n            }else if(this.grid[coords[0]][coords[1]] === 'miss'){\n                return;\n            }else{\n                this.grid[coords[0]][coords[1]].hit();\n                this.grid[coords[0]][coords[1]] = 'hit';\n                return 'Hit!'\n            }\n        },\n        allShipsSunk(){\n            if(this.ships.filter((shipObject => !shipObject.ship.isSunk())).length === 0){\n                return true;\n            }\n            return false;\n        }\n        \n    }\n}\n\nfunction createPlayer(name, isComputer){\n    return {\n        name,\n        isComputer,\n        board: createGameboard(),\n        fire(opponent, coords = [getRandom(0,10), getRandom(0,10)]){\n            \n            // Translating dataset coords to actual numbers instead of strings   \n            let y = Number(coords[0]);\n            let x = Number(coords[1])\n            \n            // Prevents computer from shooting at already missed spaces,\n            // don't plan to allow for playes but who knows.\n            while(opponent.board.getInfo([y,x]) === 'miss' || opponent.board.getInfo([y,x]) == 'hit'){\n                y = getRandom(0,10);\n                x = getRandom(0,10);\n            }\n            let result = opponent.board.recieveAttack([y,x]);\n            if(result === 'Hit!'){\n                return {message:`Hit at ${yTranslate[y]}${x+1}!`, coordinates: [y,x]}\n            }else{\n                return {message:`Miss at ${yTranslate[y]}${x+1}!`, coordinates: [y,x]}\n            }\n        }\n    }\n\n}\n\nexport { createShip, createGameboard, createPlayer }","import { createPlayer } from \"./app\";\n\nfunction randomNumber(min,max){\n    return Math.floor(Math.random() * (max - min) + min);\n}\n\nconst playerGridLocation = document.getElementById('player-y-and-grid');\nconst opponentGridLocation = document.getElementById('opponent-y-and-grid');\n\nconst playerGrid = document.createElement('div');\nplayerGrid.id= 'player-grid';\nplayerGrid.classList.add('game-grid')\n\n\nconst opponentGrid = document.createElement('div');\nopponentGrid.id = 'opponent-grid';\nopponentGrid.classList.add('game-grid')\n\nfor(let i = 0; i < 10; i++){\n    for(let j = 0; j < 10; j++){\n        \n        let playerCell = document.createElement('div');\n        playerCell.dataset.x = i\n        playerCell.dataset.y = j\n        playerCell.classList.add('player')\n        playerCell.classList.add('cell')\n        playerGrid.appendChild(playerCell)\n        \n        let opponentCell = document.createElement('div');\n        opponentCell.dataset.x = i\n        opponentCell.dataset.y = j\n        opponentCell.classList.add('opponent')\n        opponentCell.classList.add('cell')\n        opponentGrid.appendChild(opponentCell)\n    }\n}\nplayerGridLocation.appendChild(playerGrid);\nopponentGridLocation.appendChild(opponentGrid);\n\nfunction startGame(playerName, opponentName, isOpponentComputer, playerShips, opponentShips = randomCoordinates(\"opponent\")){\n    // Creating player objects and setting labels\n    const player = createPlayer(playerName, false);\n    const opponent = createPlayer(opponentName, isOpponentComputer);\n\n    //Hiding opponent boats\n    //opponentGrid.classList.add('hidden');\n\n    // Faux data for testing\n    //player.board.placeShip(3,[0,0],[0,2]);\n    //Adding player ships to board\n    playerShips.forEach(ship =>{\n        player.board.placeShip(ship[2], ship[0], ship[1])\n    })\n    \n    opponentShips.forEach(ship =>{\n        opponent.board.placeShip(ship[2], ship[0], ship[1])\n    })\n    \n    //Placing the players ships on their board\n    player.board.ships.forEach(ship =>{\n        ship.cells.forEach(cell =>{    \n            document.querySelector(`.player[data-x=\"${cell[0]}\"][data-y=\"${cell[1]}\"]`).classList.add('ship')\n        })\n    })\n\n    // Placing opponents ships on their board\n    opponent.board.ships.forEach(ship =>{\n        ship.cells.forEach(cell =>{\n            document.querySelector(`.opponent[data-x=\"${cell[0]}\"][data-y=\"${cell[1]}\"]`).classList.add('ship')\n        })\n    })\n    const attackOpponent = function (e){\n        let playerResult = player.fire(opponent, [e.target.dataset.x,e.target.dataset.y])\n        // Getting true coordinates of shot if random\n        let playerTarget = document.querySelector(`.opponent[data-x=\"${playerResult.coordinates[0]}\"][data-y=\"${playerResult.coordinates[1]}\"]`)\n\n        console.log(playerResult.message)\n        if(playerResult.message.includes('Miss')){\n            playerTarget.classList.add('miss');\n            playerTarget.innerText = 'O'\n        }else if(playerResult.message.includes('Hit')){\n            playerTarget.classList.add('hit')\n            playerTarget.innerText +='X'\n            if(opponent.board.allShipsSunk()){\n                alert(`${playerName} Wins!`)\n                opponentGrid.removeEventListener('click', attackOpponent)\n                return;\n            }\n        }\n        if(opponent.isComputer){\n            \n            let opponentResult = opponent.fire(player);\n            // Getting coordinates for random computer fire or miss retry\n            let opponentTarget = document.querySelector(`.player[data-x=\"${opponentResult.coordinates[0]}\"][data-y=\"${opponentResult.coordinates[1]}\"]`)\n\n\n            if(opponentResult.message.includes('Miss')){\n                opponentTarget.classList.add('miss');\n                opponentTarget.innerText = 'O'\n            }else if(opponentResult.message.includes('Hit')){\n                opponentTarget.classList.add('hit')\n                opponentTarget.innerHTML +='X'\n                if(player.board.allShipsSunk()){\n                    alert(`${opponentName} Wins!`)\n                    opponentGrid.removeEventListener('click', attackOpponent)\n                    return;\n                }\n            }\n        }\n    }\n    // Adding event listener to grid for taking fire()'s\n    opponentGrid.addEventListener('click', attackOpponent);\n\n}\n\nlet playerName, opponentName, isComputer;\n\nfunction getName(){\n    playerName = document.getElementById('player-name-input').value;\n    opponentName = document.getElementById('opponent-name-input').value;\n    isComputer = document.getElementById('computer-checkbox').checked;\n    if(isComputer){\n        opponentName = 'Computer'\n    }\n    if(playerName == ''){\n        playerName = 'Player'\n    }\n    document.getElementById('background').remove();\n    document.getElementById('player-name').innerText = playerName + \"'s Board\";\n    document.getElementById('opponent-name').innerText = opponentName + \"'s Board\";\n\n    //startGame(playerName, opponentName, isComputer);\n}\n\n// Dragging fuctionality\nlet dragged;\nlet shipLength;\nlet shipCoordinates = {\n    \"destroyer\": null,\n    \"cruiser\": null,\n    \"submarine\": null,\n    \"battleship\": null,\n    \"carrier\": null,\n}\nconst allShips = document.querySelectorAll('.new-ship');\nwindow.addEventListener('keydown', (e)=>{\n    if(e.key == 'r' && dragged.classList.contains('new-ship')){\n        \n        if(dragged.classList.contains('r')){\n            \n            if(Number(dragged.parentNode.dataset.x) + shipLength > 10){\n                return;\n            }\n            dragged.classList.remove('r')\n        }else{\n            if(Number(dragged.parentNode.dataset.y) + shipLength > 10){\n                return;\n            }\n            dragged.classList.add('r')\n        }\n    }\n})\n\nallShips.forEach((ship)=>{\n    \n    ship.addEventListener('dragstart', (e)=>{\n        dragged = e.target;\n        shipLength = Number(dragged.dataset.length)\n        dragged.classList.add('dragged');\n    })\n})\n\nplayerGrid.addEventListener('dragover',(e)=>{\n    e.preventDefault();\n})\nplayerGrid.addEventListener('drop',(e)=>{\n    e.preventDefault();\n    dragged.classList.remove('dragged')\n    // Make sure location is valid, and had issues when moving to a spot that was partially covered by self\n    if(dragged.parentNode != e.target && e.target != dragged){\n        // Checks orientation of boat\n        if(dragged.classList.contains('r')){\n            if(Number(e.target.dataset.y) + shipLength > 10){\n                // Exit function\n                return;\n            }\n        }else{\n            if(Number(e.target.dataset.x) + shipLength > 10){\n                return;\n            }\n        }\n\n        if(dragged.classList.contains('not-placed')){\n            dragged.classList.remove('not-placed')\n        }\n        if(dragged.classList.contains('destroyer')){\n            shipCoordinates[\"destroyer\"] = [Number(e.target.dataset.y), Number(e.target.dataset.x)]\n        } else if(dragged.classList.contains('cruiser')){\n            shipCoordinates[\"cruiser\"] = [Number(e.target.dataset.y), Number(e.target.dataset.x)]\n        } else if(dragged.classList.contains('submarine')){\n            shipCoordinates[\"submarine\"] = [Number(e.target.dataset.y), Number(e.target.dataset.x)]\n        } else if(dragged.classList.contains('battleship')){\n            shipCoordinates[\"battleship\"] = [Number(e.target.dataset.y), Number(e.target.dataset.x)]\n        } else if(dragged.classList.contains('carrier')){\n            shipCoordinates[\"carrier\"] = [Number(e.target.dataset.y), Number(e.target.dataset.x)]\n        }\n        if(shipCoordinates['destroyer'] && shipCoordinates['cruiser'] && shipCoordinates['submarine'] \n        && shipCoordinates['battleship'] && shipCoordinates['carrier']){\n            document.getElementById('player-submit-ships').disabled = false\n        }\n        dragged.parentNode.removeChild(dragged);\n        e.target.appendChild(dragged);\n    }\n})\n\nfunction getShipCoordinates(side){\n    \n    const theseShips = [];\n    theseShips.push([document.getElementById(`${side}-destroyer`),1])\n    theseShips.push([document.getElementById(`${side}-cruiser`),2])\n    theseShips.push([document.getElementById(`${side}-submarine`),2])\n    theseShips.push([document.getElementById(`${side}-battleship`),3])\n    theseShips.push([document.getElementById(`${side}-carrier`),4])\n    const shipCoordinates = [];\n    theseShips.forEach(ship =>{\n        if(ship[0].classList.contains('r')){\n            shipCoordinates.push([[Number(ship[0].parentNode.dataset.x),Number(ship[0].parentNode.dataset.y)],\n            [Number(ship[0].parentNode.dataset.x), Number(ship[0].parentNode.dataset.y) + ship[1]], ship[1]+1])\n        }else{\n            shipCoordinates.push([[Number(ship[0].parentNode.dataset.x),Number(ship[0].parentNode.dataset.y)],\n            [Number(ship[0].parentNode.dataset.x) + ship[1], Number(ship[0].parentNode.dataset.y)], ship[1]+1])\n        }\n    })\n    if(isComputer){\n        document.getElementById('player-boats').remove();\n        document.getElementById('player-submit-ships').remove();\n        startGame(playerName, opponentName, isComputer, shipCoordinates)\n        \n    }\n    \n}\n\nfunction randomCoordinates(side){\n    const theseShips = [];\n    theseShips.push([document.getElementById(`${side}-carrier`),4])\n    theseShips.push([document.getElementById(`${side}-battleship`),3])\n    theseShips.push([document.getElementById(`${side}-cruiser`),2])\n    theseShips.push([document.getElementById(`${side}-submarine`),2])\n    theseShips.push([document.getElementById(`${side}-destroyer`),1])\n    \n    const shipCoordinates = [];\n    const usedCoordinates =[];\n    theseShips.forEach(ship=>{\n        let rotated = false;\n        if(randomNumber(0,2) == 1){\n            rotated = true\n        }\n        let x = randomNumber(0, 10);\n        let y = randomNumber(0, 10);\n        let placed = false;\n        while(!placed){\n            if(rotated){\n                let overlap = false;\n                let currentSpaces = [];\n                for(let i = y; i <= y + ship[1]; i++){\n                    currentSpaces.push([x,i])\n                    \n                    usedCoordinates.forEach(coord=>{\n                        if(coord.toString() === [x,i].toString()){\n                            \n                            overlap = true;\n                            return;\n                        }\n                    })\n                }\n                if(y+ship[1] <= 9 && !overlap){\n                    shipCoordinates.push([[x,y],[x,y+ship[1]],ship[1]+1]);\n                    currentSpaces.forEach(coord=>{\n                        usedCoordinates.push(coord);\n                    })\n                    placed = true;\n                    \n                    let cell = document.querySelector(`.${side}[data-x=\"${x}\"][data-y=\"${y}\"]`)\n                    if(!ship[0].classList.contains('r')) ship[0].classList.add('r');\n                    ship[0].classList.remove('not-placed')\n                    ship[0].parentNode.removeChild(ship[0]);\n                    cell.appendChild(ship[0]);\n\n                }else {\n                    x = randomNumber(0, 10);\n                    y = randomNumber(0, 10);\n                    if(randomNumber(0,2) == 1){\n                        rotated = true\n                    } else {\n                        rotated = false;\n                    }\n                }\n            } else {\n                let overlap = false;\n                let currentSpaces = [];\n                for(let i = x; i <= x + ship[1]; i++){\n                    currentSpaces.push([i,y])\n                    usedCoordinates.forEach(coord=>{\n                        if(coord.toString() === [i,y].toString()){\n                            overlap = true;\n                            return;\n                        }\n                    })\n                }\n                if(x+ship[1] <= 9 && !overlap){\n                    shipCoordinates.push([[x,y],[x+ship[1],y],ship[1]+1]);\n                    currentSpaces.forEach(coord=>{\n                        usedCoordinates.push(coord);\n                    })\n                    placed = true;\n\n                    let cell = document.querySelector(`.${side}[data-x=\"${x}\"][data-y=\"${y}\"]`)\n                    if(ship[0].classList.contains('r')) ship[0].classList.remove('r');\n                    ship[0].classList.remove('not-placed')\n                    ship[0].parentNode.removeChild(ship[0]);\n                    cell.appendChild(ship[0]);\n\n                }else {\n                    x = randomNumber(0, 10);\n                    y = randomNumber(0, 10);\n                    if(randomNumber(0,2) == 1){\n                        rotated = true\n                    } else {\n                        rotated = false;\n                    }\n                }\n            }\n        }\n    })\n    if(side === 'player') document.getElementById('player-submit-ships').disabled = false\n    \n    return shipCoordinates;\n}\n\ndocument.getElementById('name-input').addEventListener('click',getName)\n\ndocument.getElementById('player-submit-ships').addEventListener('click', (e)=>{\n    e.preventDefault();\n    getShipCoordinates('player')\n})\n\ndocument.getElementById('player-random').addEventListener('click', (e)=>{\n    e.preventDefault();\n    randomCoordinates('player');\n})\n\n\n"],"names":["yTranslate","getRandom","min","max","Math","floor","random","createPlayer","name","isComputer","board","grid","Array","ships","placeShip","shipLength","start","end","abs","newShip","length","hits","hit","this","getLength","getHits","isSunk","cells","xStart","xEnd","i","push","yStart","yEnd","ship","getInfo","coords","recieveAttack","undefined","allShipsSunk","filter","shipObject","fire","opponent","y","Number","x","message","coordinates","randomNumber","playerGridLocation","document","getElementById","opponentGridLocation","playerGrid","createElement","id","classList","add","opponentGrid","j","playerCell","dataset","appendChild","opponentCell","playerName","opponentName","dragged","shipCoordinates","allShips","querySelectorAll","randomCoordinates","side","theseShips","usedCoordinates","forEach","rotated","placed","overlap","currentSpaces","coord","toString","cell","querySelector","contains","remove","parentNode","removeChild","disabled","window","addEventListener","e","key","target","preventDefault","value","checked","innerText","isOpponentComputer","playerShips","opponentShips","player","attackOpponent","playerResult","playerTarget","console","log","includes","alert","removeEventListener","opponentResult","opponentTarget","innerHTML","startGame","getShipCoordinates"],"sourceRoot":""}